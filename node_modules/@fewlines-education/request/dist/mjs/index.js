import fetch, { FetchError, Headers, Request, Response, } from "node-fetch";
export default function request(url, optionsOrCallback, callback) {
    const options = typeof optionsOrCallback === "object" && optionsOrCallback !== null
        ? optionsOrCallback
        : {};
    const realCallback = typeof callback === "function"
        ? callback
        : typeof optionsOrCallback === "function"
            ? optionsOrCallback
            : null;
    if (realCallback === null) {
        throw new Error("No callback was provided");
    }
    fetch(url, options).then((response) => response.text().then((textResponse) => {
        realCallback(null, textResponse, response);
    }), (error) => realCallback(error, null, null));
}
export { Headers, FetchError, Request, Response };
